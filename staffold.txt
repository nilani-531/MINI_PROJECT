import React, { useState, useEffect } from 'react';
import { fetchQuizzes, getQuizResults } from '../services/quizService'; 
import { getUserDetails } from '../services/authService'; 
import { Link } from 'react-router-dom'; 
import '../styles/Dashboard.css'; 

const StaffDashboard = () => {
    const [quizzes, setQuizzes] = useState([]);
    const [results, setResults] = useState([]);
    const { name: staffName, role: staffRole } = getUserDetails();
    const [message, setMessage] = useState('');

    useEffect(() => {
        const loadQuizzes = async () => {
            try {
                const result = await fetchQuizzes();  // Fetch all quizzes created by staff
                setQuizzes(result);
            } catch (error) {
                setMessage('Error fetching quizzes. Please try again later.');
            }
        };

        const fetchResults = async () => {
            try {
                const userId = localStorage.getItem('userId'); // Fetch results related to the staff
                const fetchedResults = await getQuizResults(userId);  // Fetch all quiz results for staff
                setResults(fetchedResults);
            } catch (error) {
                console.error('Error fetching quiz results:', error);
            }
        };

        loadQuizzes();
        fetchResults();
    }, []);

    return (
        <div className="dashboard-container">
            <div className="dashboard-header">
                <h1>Welcome, {staffName || 'Staff'}!</h1>
                <h2>Role: {staffRole || 'Role not defined'}</h2>
            </div>

            {/* Quizzes Created by Staff */}
            <div className="quiz-list">
                {message && <p>{message}</p>}
                <h2>Your Created Quizzes</h2>
                {quizzes.length === 0 ? (
                    <p>No quizzes found.</p>
                ) : (
                    <div>
                        {quizzes.map(quiz => (
                            <div key={quiz._id} className="quiz-item">
                                <h3>{quiz.title}</h3>  {/* Show quiz title */}
                                {/*<p>Category: {quiz.categories.map(cat => cat.categoryName).join(', ')}</p>*/}
                                <Link to={`/start-quiz/${quiz._id}`} className="quiz-link">Create Quiz</Link>
                            </div>
                        ))}
                    </div>
                )}
            </div>

            {/* Quiz Results Section */}
            <div className="quiz-results">
                <h2>Quiz Results Overview</h2>
                {results.length === 0 ? (
                    <p>No quiz results found.</p>
                ) : (
                    <div>
                        {results.map(result => {
    console.log('Raw date:', result.completedAt); // Log the raw date to see its format
    console.log('Quiz results:', results); // Log the entire results array

    // Use 'completedAt' instead of 'date'
    const quizDate = new Date(result.completedAt || Date.now()); // Fallback to current date
    const formattedDate = quizDate.toLocaleDateString('en-US');
    const isValidDate = !isNaN(quizDate.getTime());

    return (
        <div key={result._id} className="result-item">
            <h3>Topic: {result.topicName}</h3>
            <p>Score: {result.score}/{result.totalQuestions}</p>
            <p>Date: {isValidDate ? formattedDate : 'Invalid Date'}</p>
        </div>
    );
})}

                    </div>
                )}
            </div>

            {/* Option for Staff to Take Quiz */}
            <div className="take-quiz-container">
                <Link to="/take-quiz" className="take-quiz-button">
                    <button className="btn">Take Quiz</button>
                </Link>
            </div>
        </div>
    );
};

export default StaffDashboard;
